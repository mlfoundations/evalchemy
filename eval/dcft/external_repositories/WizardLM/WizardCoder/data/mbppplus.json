{
    "Mbpp/2": "Write a function to find the shared elements from the given two lists. Your code should satisfy the following assertion:\n```python\nassert set(similar_elements((3, 4, 5, 6),(5, 7, 4, 10))) == set((4, 5))\n```",
    "Mbpp/3": "Write a python function to identify non-prime numbers. Your code should satisfy the following assertion:\n```python\nassert is_not_prime(2) == False\n```",
    "Mbpp/4": "Write a function to find the n largest integers from a given list of numbers, returned in descending order. Your code should satisfy the following assertion:\n```python\nassert heap_queue_largest( [25, 35, 22, 85, 14, 65, 75, 22, 58],3)==[85, 75, 65]\n```",
    "Mbpp/6": "Write a python function to check whether the two numbers differ at one bit position only or not. Your code should satisfy the following assertion:\n```python\nassert differ_At_One_Bit_Pos(13,9) == True\n```",
    "Mbpp/7": "Write a function to find all words which are at least 4 characters long in a string. Your code should satisfy the following assertion:\n```python\nassert set(find_char_long('Please move back to stream')) == set(['Please', 'move', 'back', 'stream'])\n```",
    "Mbpp/8": "Write a function to find squares of individual elements in a list. Your code should satisfy the following assertion:\n```python\nassert square_nums([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])==[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]\n```",
    "Mbpp/9": "Write a python function to find the minimum number of rotations (greater than 0) required to get the same string. Your code should satisfy the following assertion:\n```python\nassert find_Rotations(\"aaaa\") == 1\n```",
    "Mbpp/11": "Write a python function to remove first and last occurrence of a given character from the string. Your code should satisfy the following assertion:\n```python\nassert remove_Occ(\"hello\",\"l\") == \"heo\"\n```",
    "Mbpp/12": "Write a function to sort a given matrix in ascending order according to the sum of its rows. Your code should satisfy the following assertion:\n```python\nassert sort_matrix([[1, 2, 3], [2, 4, 5], [1, 1, 1]])==[[1, 1, 1], [1, 2, 3], [2, 4, 5]]\n```",
    "Mbpp/14": "Write a python function to find the volume of a triangular prism. Your code should satisfy the following assertion:\n```python\nassert find_Volume(10,8,6) == 240\n```",
    "Mbpp/16": "Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. Your code should satisfy the following assertion:\n```python\nassert text_lowercase_underscore(\"aab_cbbbc\")==(True)\n```",
    "Mbpp/17": "Write a function that returns the perimeter of a square given its side length as input. Your code should satisfy the following assertion:\n```python\nassert square_perimeter(10)==40\n```",
    "Mbpp/18": "Write a function to remove characters from the first string which are present in the second string. Your code should satisfy the following assertion:\n```python\nassert remove_dirty_chars(\"probasscurve\", \"pros\") == 'bacuve'\n```",
    "Mbpp/19": "Write a function to find whether a given array of integers contains any duplicate element. Your code should satisfy the following assertion:\n```python\nassert test_duplicate(([1,2,3,4,5]))==False\n```",
    "Mbpp/20": "Write a function to check if the given number is woodball or not. Your code should satisfy the following assertion:\n```python\nassert is_woodall(383) == True\n```",
    "Mbpp/56": "Write a python function to check if a given number is one less than twice its reverse. Your code should satisfy the following assertion:\n```python\nassert check(70) == False\n```",
    "Mbpp/57": "Write a python function to find the largest number that can be formed with the given list of digits. Your code should satisfy the following assertion:\n```python\nassert find_Max_Num([1,2,3]) == 321\n```",
    "Mbpp/58": "Write a python function to check whether the given two integers have opposite sign or not. Your code should satisfy the following assertion:\n```python\nassert opposite_Signs(1,-2) == True\n```",
    "Mbpp/59": "Write a function to find the nth octagonal number. Your code should satisfy the following assertion:\n```python\nassert is_octagonal(5) == 65\n```",
    "Mbpp/61": "Write a python function to count the number of substrings with the sum of digits equal to their length. Your code should satisfy the following assertion:\n```python\nassert count_Substrings('112112') == 6\n```",
    "Mbpp/62": "Write a python function to find smallest number in a list. Your code should satisfy the following assertion:\n```python\nassert smallest_num([10, 20, 1, 45, 99]) == 1\n```",
    "Mbpp/63": "Write a function to find the maximum difference between available pairs in the given tuple list. Your code should satisfy the following assertion:\n```python\nassert max_difference([(3, 5), (1, 7), (10, 3), (1, 2)]) == 7\n```",
    "Mbpp/64": "Write a function to sort a list of tuples using the second value of each tuple. Your code should satisfy the following assertion:\n```python\nassert subject_marks([('English', 88), ('Science', 90), ('Maths', 97), ('Social sciences', 82)])==[('Social sciences', 82), ('English', 88), ('Science', 90), ('Maths', 97)]\n```",
    "Mbpp/65": "Write a function to flatten a list and sum all of its elements. Your code should satisfy the following assertion:\n```python\nassert recursive_list_sum(([1, 2, [3,4],[5,6]]))==21\n```",
    "Mbpp/66": "Write a python function to count the number of positive numbers in a list. Your code should satisfy the following assertion:\n```python\nassert pos_count([1,-2,3,-4]) == 2\n```",
    "Mbpp/67": "Write a function to find the number of ways to partition a set of Bell numbers. Your code should satisfy the following assertion:\n```python\nassert bell_number(2)==2\n```",
    "Mbpp/68": "Write a python function to check whether the given array is monotonic or not. Your code should satisfy the following assertion:\n```python\nassert is_Monotonic([6, 5, 4, 4]) == True\n```",
    "Mbpp/69": "Write a function to check whether a list contains the given sublist or not. Your code should satisfy the following assertion:\n```python\nassert is_sublist([2,4,3,5,7],[3,7])==False\n```",
    "Mbpp/70": "Write a function to find whether all the given tuples have equal length or not. Your code should satisfy the following assertion:\n```python\nassert get_equal([(11, 22, 33), (44, 55, 66)]) == True\n```",
    "Mbpp/71": "Write a function to sort a list of elements. Your code should satisfy the following assertion:\n```python\nassert comb_sort([5, 15, 37, 25, 79]) == [5, 15, 25, 37, 79]\n```",
    "Mbpp/72": "Write a python function to check whether the given number can be represented as the difference of two squares or not. Your code should satisfy the following assertion:\n```python\nassert dif_Square(5) == True\n```",
    "Mbpp/74": "Write a function to check whether it follows the sequence given in the patterns array. Your code should satisfy the following assertion:\n```python\nassert is_samepatterns([\"red\",\"green\",\"green\"], [\"a\", \"b\", \"b\"])==True\n```",
    "Mbpp/75": "Write a function to find tuples which have all elements divisible by k from the given list of tuples. Your code should satisfy the following assertion:\n```python\nassert find_tuples([(6, 24, 12), (7, 9, 6), (12, 18, 21)], 6) == [(6, 24, 12)]\n```",
    "Mbpp/77": "Write a python function to find whether a number is divisible by 11. Your code should satisfy the following assertion:\n```python\nassert is_Diff (12345) == False\n```",
    "Mbpp/79": "Write a python function to check whether the length of the word is odd or not. Your code should satisfy the following assertion:\n```python\nassert word_len(\"Hadoop\") == False\n```",
    "Mbpp/80": "Write a function to find the nth tetrahedral number. Your code should satisfy the following assertion:\n```python\nassert tetrahedral_number(5) == 35\n```",
    "Mbpp/82": "Write a function to find the volume of a sphere. Your code should satisfy the following assertion:\n```python\nassert math.isclose(volume_sphere(10), 4188.790204786391, rel_tol=0.001)\n```",
    "Mbpp/83": "Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. Your code should satisfy the following assertion:\n```python\nassert get_Char(\"abc\") == \"f\"\n```",
    "Mbpp/84": "Write a function to find the nth number in the newman conway sequence. Your code should satisfy the following assertion:\n```python\nassert sequence(10) == 6\n```",
    "Mbpp/85": "Write a function to find the surface area of a sphere. Your code should satisfy the following assertion:\n```python\nassert math.isclose(surfacearea_sphere(10), 1256.6370614359173, rel_tol=0.001)\n```",
    "Mbpp/86": "Write a function to find nth centered hexagonal number. Your code should satisfy the following assertion:\n```python\nassert centered_hexagonal_number(10) == 271\n```",
    "Mbpp/87": "Write a function to merge three dictionaries into a single dictionary. Your code should satisfy the following assertion:\n```python\nassert merge_dictionaries_three({ \"R\": \"Red\", \"B\": \"Black\", \"P\": \"Pink\" }, { \"G\": \"Green\", \"W\": \"White\" },{ \"O\": \"Orange\", \"W\": \"White\", \"B\": \"Black\" })=={'B': 'Black', 'R': 'Red', 'P': 'Pink', 'G': 'Green', 'W': 'White', 'O': 'Orange'}\n```",
    "Mbpp/88": "Write a function to get the frequency of all the elements in a list, returned as a dictionary. Your code should satisfy the following assertion:\n```python\nassert freq_count([10,10,10,10,20,20,20,20,40,40,50,50,30])==({10: 4, 20: 4, 40: 2, 50: 2, 30: 1})\n```",
    "Mbpp/89": "Write a function to find the closest smaller number than n. Your code should satisfy the following assertion:\n```python\nassert closest_num(11) == 10\n```",
    "Mbpp/90": "Write a python function to find the length of the longest word. Your code should satisfy the following assertion:\n```python\nassert len_log([\"python\",\"PHP\",\"bigdata\"]) == 7\n```",
    "Mbpp/91": "Write a function to check if a string is present as a substring in a given list of string values. Your code should satisfy the following assertion:\n```python\nassert find_substring([\"red\", \"black\", \"white\", \"green\", \"orange\"],\"ack\")==True\n```",
    "Mbpp/92": "Write a function to check whether the given number is undulating or not. Your code should satisfy the following assertion:\n```python\nassert is_undulating(1212121) == True\n```",
    "Mbpp/93": "Write a function to calculate the value of 'a' to the power 'b'. Your code should satisfy the following assertion:\n```python\nassert power(3,4) == 81\n```",
    "Mbpp/94": "Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. Your code should satisfy the following assertion:\n```python\nassert index_minimum([('Rash', 143), ('Manjeet', 200), ('Varsha', 100)]) == 'Varsha'\n```",
    "Mbpp/95": "Write a python function to find the length of the smallest list in a list of lists. Your code should satisfy the following assertion:\n```python\nassert Find_Min_Length([[1],[1,2]]) == 1\n```",
    "Mbpp/96": "Write a python function to find the number of divisors of a given integer. Your code should satisfy the following assertion:\n```python\nassert divisor(15) == 4\n```",
    "Mbpp/97": "Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary. Your code should satisfy the following assertion:\n```python\nassert frequency_lists([[1, 2, 3, 2], [4, 5, 6, 2], [7, 8, 9, 5]])=={1: 1, 2: 3, 3: 1, 4: 1, 5: 2, 6: 1, 7: 1, 8: 1, 9: 1}\n```",
    "Mbpp/98": "Write a function to multiply all the numbers in a list and divide with the length of the list. Your code should satisfy the following assertion:\n```python\nassert math.isclose(multiply_num((8, 2, 3, -1, 7)), -67.2, rel_tol=0.001)\n```",
    "Mbpp/99": "Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros. Your code should satisfy the following assertion:\n```python\nassert decimal_to_binary(8) == '1000'\n```",
    "Mbpp/100": "Write a function to find the next smallest palindrome of a specified integer, returned as an integer. Your code should satisfy the following assertion:\n```python\nassert next_smallest_palindrome(99)==101\n```",
    "Mbpp/101": "Write a function to find the kth element in the given array using 1-based indexing. Your code should satisfy the following assertion:\n```python\nassert kth_element([12,3,5,7,19], 2) == 3\n```",
    "Mbpp/102": "Write a function to convert a snake case string to camel case string. Your code should satisfy the following assertion:\n```python\nassert snake_to_camel('python_program')=='PythonProgram'\n```",
    "Mbpp/103": "Write a function to find the Eulerian number a(n, m). Your code should satisfy the following assertion:\n```python\nassert eulerian_num(3, 1) == 4\n```",
    "Mbpp/104": "Write a function to sort each sublist of strings in a given list of lists. Your code should satisfy the following assertion:\n```python\nassert sort_sublists(([\"green\", \"orange\"], [\"black\", \"white\"], [\"white\", \"black\", \"orange\"]))==[['green', 'orange'], ['black', 'white'], ['black', 'orange', 'white']]\n```",
    "Mbpp/105": "Write a python function to count true booleans in the given list. Your code should satisfy the following assertion:\n```python\nassert count([True,False,True]) == 2\n```",
    "Mbpp/106": "Write a function to append the given list to the given tuples. Your code should satisfy the following assertion:\n```python\nassert add_lists([5, 6, 7], (9, 10)) == (9, 10, 5, 6, 7)\n```",
    "Mbpp/108": "Write a function to merge three lists into a single sorted list. Your code should satisfy the following assertion:\n```python\nassert merge_sorted_list([25, 24, 15, 4, 5, 29, 110],[19, 20, 11, 56, 25, 233, 154],[24, 26, 54, 48])==[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]\n```",
    "Mbpp/109": "Write a python function to find the number of numbers with an odd value when rotating a binary string the given number of times. Your code should satisfy the following assertion:\n```python\nassert odd_Equivalent(\"011001\",6) == 3\n```",
    "Mbpp/111": "Write a function to find the common elements in given nested lists. Your code should satisfy the following assertion:\n```python\nassert set(common_in_nested_lists([[12, 18, 23, 25, 45], [7, 12, 18, 24, 28], [1, 5, 8, 12, 15, 16, 18]]))==set([18, 12])\n```",
    "Mbpp/113": "Write a function to check if a string represents an integer or not. Your code should satisfy the following assertion:\n```python\nassert check_integer(\"python\")==False\n```",
    "Mbpp/115": "Write a function to check whether all dictionaries in a list are empty or not. Your code should satisfy the following assertion:\n```python\nassert empty_dit([{},{},{}])==True\n```",
    "Mbpp/116": "Write a function to convert a given tuple of positive integers into a single integer. Your code should satisfy the following assertion:\n```python\nassert tuple_to_int((1,2,3))==123\n```",
    "Mbpp/117": "Write a function to convert all possible convertible elements in a list of lists to floats. Your code should satisfy the following assertion:\n```python\nassert list_to_float( [(\"3\", \"4\"), (\"1\", \"26.45\"), (\"7.32\", \"8\"), (\"4\", \"8\")] ) == [(3.0, 4.0), (1.0, 26.45), (7.32, 8.0), (4.0, 8.0)]\n```",
    "Mbpp/118": "Write a function to convert a string to a list of strings split on the space character. Your code should satisfy the following assertion:\n```python\nassert string_to_list(\"python programming\")==['python','programming']\n```",
    "Mbpp/119": "Write a python function to find the element that appears only once in a sorted array. Your code should satisfy the following assertion:\n```python\nassert search([1,1,2,2,3]) == 3\n```",
    "Mbpp/120": "Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list. Your code should satisfy the following assertion:\n```python\nassert max_product_tuple([(2, 7), (2, 6), (1, 8), (4, 9)] )==36\n```",
    "Mbpp/123": "Write a function to sum all amicable numbers from 1 to a specified number. Your code should satisfy the following assertion:\n```python\nassert amicable_numbers_sum(999)==504\n```",
    "Mbpp/124": "Write a function to get the angle of a complex number. Your code should satisfy the following assertion:\n```python\nassert math.isclose(angle_complex(0,1j), 1.5707963267948966, rel_tol=0.001)\n```",
    "Mbpp/125": "Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string. Your code should satisfy the following assertion:\n```python\nassert find_length(\"11000010001\") == 6\n```",
    "Mbpp/126": "Write a python function to find the sum of common divisors of two given numbers. Your code should satisfy the following assertion:\n```python\nassert sum(10,15) == 6\n```",
    "Mbpp/127": "Write a function to multiply two integers. Your code should satisfy the following assertion:\n```python\nassert multiply_int(10,20)==200\n```",
    "Mbpp/128": "Write a function to find words that are longer than n characters from a given list of words. Your code should satisfy the following assertion:\n```python\nassert long_words(3,\"python is a programming language\")==['python','programming','language']\n```",
    "Mbpp/129": "Write a function to calculate whether the matrix is a magic square. Your code should satisfy the following assertion:\n```python\nassert magic_square_test([[7, 12, 1, 14], [2, 13, 8, 11], [16, 3, 10, 5], [9, 6, 15, 4]])==True\n```",
    "Mbpp/130": "Write a function to find the item with maximum frequency in a given list. Your code should satisfy the following assertion:\n```python\nassert max_occurrences([2,3,8,4,7,9,8,2,6,5,1,6,1,2,3,2,4,6,9,1,2])==2\n```",
    "Mbpp/131": "Write a python function to reverse only the vowels of a given string (where y is not a vowel). Your code should satisfy the following assertion:\n```python\nassert reverse_vowels(\"Python\") == \"Python\"\n```",
    "Mbpp/132": "Write a function to convert a tuple to a string. Your code should satisfy the following assertion:\n```python\nassert tup_string(('e', 'x', 'e', 'r', 'c', 'i', 's', 'e', 's'))==(\"exercises\")\n```",
    "Mbpp/133": "Write a function to calculate the sum of the negative numbers of a given list of numbers. Your code should satisfy the following assertion:\n```python\nassert sum_negativenum([2, 4, -6, -9, 11, -12, 14, -5, 17])==-32\n```",
    "Mbpp/135": "Write a function to find the nth hexagonal number. Your code should satisfy the following assertion:\n```python\nassert hexagonal_num(10) == 190\n```",
    "Mbpp/137": "Write a function to find the ratio of zeroes to non-zeroes in an array of integers. Your code should satisfy the following assertion:\n```python\nassert math.isclose(zero_count([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]), 0.181818, rel_tol=0.001)\n```",
    "Mbpp/138": "Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not. Your code should satisfy the following assertion:\n```python\nassert is_Sum_Of_Powers_Of_Two(10) == True\n```",
    "Mbpp/139": "Write a function to find the circumference of a circle. Your code should satisfy the following assertion:\n```python\nassert math.isclose(circle_circumference(10), 62.830000000000005, rel_tol=0.001)\n```",
    "Mbpp/140": "Write a function to flatten the list of lists into a single set of numbers. Your code should satisfy the following assertion:\n```python\nassert set(extract_singly([(3, 4, 5), (4, 5, 7), (1, 4)])) == set([3, 4, 5, 7, 1])\n```",
    "Mbpp/141": "Write a function to sort a list of elements. Your code should satisfy the following assertion:\n```python\nassert pancake_sort([15, 79, 25, 38, 69]) == [15, 25, 38, 69, 79]\n```",
    "Mbpp/142": "Write a function to count number items that are identical in the same position of three given lists. Your code should satisfy the following assertion:\n```python\nassert count_samepair([1,2,3,4,5,6,7,8],[2,2,3,1,2,6,7,9],[2,1,3,1,2,6,7,9])==3\n```",
    "Mbpp/143": "Write a function to find number of lists present in the given tuple. Your code should satisfy the following assertion:\n```python\nassert find_lists(([1, 2, 3, 4], [5, 6, 7, 8])) == 2\n```",
    "Mbpp/145": "Write a python function to find the maximum difference between any two elements in a given array. Your code should satisfy the following assertion:\n```python\nassert max_Abs_Diff((2,1,5,3)) == 4\n```",
    "Mbpp/160": "Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists. Your code should satisfy the following assertion:\n```python\nassert find_solution(2, 3, 7) == (2, 1)\n```",
    "Mbpp/161": "Write a function to remove all elements from a given list present in another list. Your code should satisfy the following assertion:\n```python\nassert remove_elements([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [2, 4, 6, 8]) == [1, 3, 5, 7, 9, 10]\n```",
    "Mbpp/162": "Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0). Your code should satisfy the following assertion:\n```python\nassert sum_series(6) == 12\n```",
    "Mbpp/164": "Write a function to determine if the sum of the divisors of two integers are the same. Your code should satisfy the following assertion:\n```python\nassert are_equivalent(36, 57) == False\n```",
    "Mbpp/165": "Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). Your code should satisfy the following assertion:\n```python\nassert count_char_position(\"xbcefg\") == 2\n```",
    "Mbpp/166": "Write a function that counts the number of pairs of integers in a list that xor to an even number. Your code should satisfy the following assertion:\n```python\nassert find_even_pair([5, 4, 7, 2, 1]) == 4\n```",
    "Mbpp/167": "Write a python function to find the smallest power of 2 greater than or equal to n. Your code should satisfy the following assertion:\n```python\nassert next_power_of_2(0) == 1\n```",
    "Mbpp/168": "Write a function to count the number of occurrences of a number in a given list. Your code should satisfy the following assertion:\n```python\nassert frequency([1,2,3], 4) == 0\n```",
    "Mbpp/170": "Write a function to find the sum of numbers in a list within a range specified by two indices. Your code should satisfy the following assertion:\n```python\nassert sum_range_list([2,1,5,6,8,3,4,9,10,11,8,12], 8, 10) == 29\n```",
    "Mbpp/171": "Write a function to find the perimeter of a regular pentagon from the length of its sides. Your code should satisfy the following assertion:\n```python\nassert perimeter_pentagon(5) == 25\n```",
    "Mbpp/172": "Write a function to count the number of occurence of the string 'std' in a given string. Your code should satisfy the following assertion:\n```python\nassert count_occurance(\"letstdlenstdporstd\") == 3\n```",
    "Mbpp/222": "Write a function to check if all the elements in tuple have same data type or not. Your code should satisfy the following assertion:\n```python\nassert check_type((5, 6, 7, 3, 5, 6) ) == True\n```",
    "Mbpp/223": "Write a function that takes in a sorted array, its length (n), and an element and returns whether the element is the majority element in the given sorted array. (The majority element is the element that occurs more than n/2 times.). Your code should satisfy the following assertion:\n```python\nassert is_majority([1, 2, 3, 3, 3, 3, 10], 7, 3) == True\n```",
    "Mbpp/224": "Write a python function to count the number of set bits (binary digits with value 1) in a given number. Your code should satisfy the following assertion:\n```python\nassert count_Set_Bits(2) == 1\n```",
    "Mbpp/226": "Write a python function to remove the characters which have odd index values of a given string. Your code should satisfy the following assertion:\n```python\nassert odd_values_string('abcdef') == 'ace'\n```",
    "Mbpp/227": "Write a function to find minimum of three numbers. Your code should satisfy the following assertion:\n```python\nassert min_of_three(10,20,0)==0\n```",
    "Mbpp/229": "Write a function that takes in an array and an integer n, and re-arranges the first n elements of the given array so that all negative elements appear before positive ones, and where the relative order among negative and positive elements is preserved. Your code should satisfy the following assertion:\n```python\nassert re_arrange_array([-1, 2, -3, 4, 5, 6, -7, 8, 9], 9) == [-1, -3, -7, 4, 5, 6, 2, 8, 9]\n```",
    "Mbpp/230": "Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string. Your code should satisfy the following assertion:\n```python\nassert replace_blank(\"hello people\",'@')==(\"hello@people\")\n```",
    "Mbpp/232": "Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. Your code should satisfy the following assertion:\n```python\nassert set(larg_nnum([10, 20, 50, 70, 90, 20, 50, 40, 60, 80, 100],2))==set([100,90])\n```",
    "Mbpp/233": "Write a function to find the lateral surface area of a cylinder. Your code should satisfy the following assertion:\n```python\nassert math.isclose(lateralsuface_cylinder(10,5), 314.15000000000003, rel_tol=0.001)\n```",
    "Mbpp/234": "Write a function to find the volume of a cube given its side length. Your code should satisfy the following assertion:\n```python\nassert volume_cube(3)==27\n```",
    "Mbpp/235": "Write a python function to set all even bits of a given number. Your code should satisfy the following assertion:\n```python\nassert even_bit_set_number(10) == 10\n```",
    "Mbpp/237": "Write a function that takes in a list of tuples and returns a dictionary mapping each unique tuple to the number of times it occurs in the list. Your code should satisfy the following assertion:\n```python\nassert check_occurences([(3, 1), (1, 3), (2, 5), (5, 2), (6, 3)] ) == {(1, 3): 2, (2, 5): 2, (3, 6): 1}\n```",
    "Mbpp/238": "Write a python function to count the number of non-empty substrings of a given string. Your code should satisfy the following assertion:\n```python\nassert number_of_substrings(\"abc\") == 6\n```",
    "Mbpp/239": "Write a function that takes in positive integers m and n and finds the number of possible sequences of length n, such that each element is a positive integer and is greater than or equal to twice the previous element but less than or equal to m. Your code should satisfy the following assertion:\n```python\nassert get_total_number_of_sequences(10, 4) == 4\n```",
    "Mbpp/240": "Write a function that takes in two lists and replaces the last element of the first list with the elements of the second list. Your code should satisfy the following assertion:\n```python\nassert replace_list([1, 3, 5, 7, 9, 10],[2, 4, 6, 8])==[1, 3, 5, 7, 9, 2, 4, 6, 8]\n```",
    "Mbpp/242": "Write a function to count the total number of characters in a string. Your code should satisfy the following assertion:\n```python\nassert count_charac(\"python programming\")==18\n```",
    "Mbpp/244": "Write a python function to find the next perfect square greater than a given number. Your code should satisfy the following assertion:\n```python\nassert next_Perfect_Square(35) == 36\n```",
    "Mbpp/245": "Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing. Your code should satisfy the following assertion:\n```python\nassert max_sum([1, 15, 51, 45, 33, 100, 12, 18, 9]) == 194\n```",
    "Mbpp/247": "Write a function to find the length of the longest palindromic subsequence in the given string. Your code should satisfy the following assertion:\n```python\nassert lps(\"TENS FOR TENS\") == 5\n```",
    "Mbpp/249": "Write a function to find the intersection of two arrays. Your code should satisfy the following assertion:\n```python\nassert intersection_array([1, 2, 3, 5, 7, 8, 9, 10],[1, 2, 4, 8, 9])==[1, 2, 8, 9]\n```",
    "Mbpp/250": "Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple. Your code should satisfy the following assertion:\n```python\nassert count_X((10, 8, 5, 2, 10, 15, 10, 8, 5, 8, 8, 2),4) == 0\n```",
    "Mbpp/251": "Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. Your code should satisfy the following assertion:\n```python\nassert insert_element(['Red', 'Green', 'Black'] ,'c')==['c', 'Red', 'c', 'Green', 'c', 'Black']\n```",
    "Mbpp/252": "Write a python function to convert complex numbers to polar coordinates. Your code should satisfy the following assertion:\n```python\nassert convert(1) == (1.0, 0.0)\n```",
    "Mbpp/253": "Write a python function that returns the number of integer elements in a given list. Your code should satisfy the following assertion:\n```python\nassert count_integer([1,2,'abc',1.2]) == 2\n```",
    "Mbpp/255": "Write a function that takes in a list and length n, and generates all combinations (with repetition) of the elements of the list and returns a list with a tuple for each combination. Your code should satisfy the following assertion:\n```python\nassert combinations_colors( [\"Red\",\"Green\",\"Blue\"],1)==[('Red',), ('Green',), ('Blue',)]\n```",
    "Mbpp/256": "Write a python function that takes in a non-negative number and returns the number of prime numbers less than the given non-negative number. Your code should satisfy the following assertion:\n```python\nassert count_Primes_nums(5) == 2\n```",
    "Mbpp/257": "Write a function that takes in two numbers and returns a tuple with the second number and then the first number. Your code should satisfy the following assertion:\n```python\nassert swap_numbers(10,20)==(20,10)\n```",
    "Mbpp/259": "Write a function to maximize the given two tuples. Your code should satisfy the following assertion:\n```python\nassert maximize_elements(((1, 3), (4, 5), (2, 9), (1, 10)), ((6, 7), (3, 9), (1, 1), (7, 3))) == ((6, 7), (4, 9), (2, 9), (7, 10))\n```",
    "Mbpp/260": "Write a function to find the nth newman\u2013shanks\u2013williams prime number. Your code should satisfy the following assertion:\n```python\nassert newman_prime(3) == 7\n```",
    "Mbpp/261": "Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples. Your code should satisfy the following assertion:\n```python\nassert division_elements((10, 4, 6, 9),(5, 2, 3, 3)) == (2, 2, 2, 3)\n```",
    "Mbpp/262": "Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple. Your code should satisfy the following assertion:\n```python\nassert split_two_parts([1,1,2,3,4,4,5,1],3)==([1, 1, 2], [3, 4, 4, 5, 1])\n```",
    "Mbpp/264": "Write a function to calculate a dog's age in dog's years. Your code should satisfy the following assertion:\n```python\nassert dog_age(12)==61\n```",
    "Mbpp/265": "Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists. Your code should satisfy the following assertion:\n```python\nassert list_split(['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n'],3)==[['a', 'd', 'g', 'j', 'm'], ['b', 'e', 'h', 'k', 'n'], ['c', 'f', 'i', 'l']]\n```",
    "Mbpp/266": "Write a function to find the lateral surface area of a cube given its side length. Your code should satisfy the following assertion:\n```python\nassert lateralsurface_cube(5)==100\n```",
    "Mbpp/267": "Write a python function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers. Your code should satisfy the following assertion:\n```python\nassert square_Sum(2) == 10\n```",
    "Mbpp/268": "Write a function to find the n'th star number. Your code should satisfy the following assertion:\n```python\nassert find_star_num(3) == 37\n```",
    "Mbpp/269": "Write a function to find the ascii value of a character. Your code should satisfy the following assertion:\n```python\nassert ascii_value('A')==65\n```",
    "Mbpp/270": "Write a python function to find the sum of even numbers at even positions of a list. Your code should satisfy the following assertion:\n```python\nassert sum_even_and_even_index([5, 6, 12, 1, 18, 8]) == 30\n```",
    "Mbpp/271": "Write a python function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power. Your code should satisfy the following assertion:\n```python\nassert even_Power_Sum(2) == 1056\n```",
    "Mbpp/272": "Write a function that takes in a list of tuples and returns a list containing the rear element of each tuple. Your code should satisfy the following assertion:\n```python\nassert rear_extract([(1, 'Rash', 21), (2, 'Varsha', 20), (3, 'Kil', 19)]) == [21, 20, 19]\n```",
    "Mbpp/273": "Write a function that takes in two tuples and subtracts the elements of the first tuple by the elements of the second tuple with the same index. Your code should satisfy the following assertion:\n```python\nassert substract_elements((10, 4, 5), (2, 5, 18)) == (8, -1, -13)\n```",
    "Mbpp/274": "Write a python function that takes in a positive integer n and finds the sum of even index binomial coefficients. Your code should satisfy the following assertion:\n```python\nassert even_binomial_Coeff_Sum(4) == 8\n```",
    "Mbpp/276": "Write a function that takes in the radius and height of a cylinder and returns the the volume. Your code should satisfy the following assertion:\n```python\nassert math.isclose(volume_cylinder(10,5), 1570.7500000000002, rel_tol=0.001)\n```",
    "Mbpp/277": "Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n. Your code should satisfy the following assertion:\n```python\nassert dict_filter({'Cierra Vega': 175, 'Alden Cantrell': 180, 'Kierra Gentry': 165, 'Pierre Cox': 190},170)=={'Cierra Vega': 175, 'Alden Cantrell': 180, 'Pierre Cox': 190}\n```",
    "Mbpp/278": "Write a function to find the number of elements that occurs before the tuple element in the given tuple. Your code should satisfy the following assertion:\n```python\nassert count_first_elements((1, 5, 7, (4, 6), 10) ) == 3\n```",
    "Mbpp/279": "Write a function to find the nth decagonal number. Your code should satisfy the following assertion:\n```python\nassert is_num_decagonal(3) == 27\n```",
    "Mbpp/280": "Write a function that takes in an array and element and returns a tuple containing a boolean that indicates if the element is in the array and the index position of the element (or -1 if the element is not found). Your code should satisfy the following assertion:\n```python\nassert sequential_search([11,23,58,31,56,77,43,12,65,19],31) == (True, 3)\n```",
    "Mbpp/281": "Write a python function to check if the elements of a given list are unique or not. Your code should satisfy the following assertion:\n```python\nassert all_unique([1,2,3]) == True\n```",
    "Mbpp/282": "Write a function to subtract two lists element-wise. Your code should satisfy the following assertion:\n```python\nassert sub_list([1, 2, 3],[4,5,6])==[-3,-3,-3]\n```",
    "Mbpp/283": "Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself. Your code should satisfy the following assertion:\n```python\nassert validate(1234) == True\n```",
    "Mbpp/284": "Write a function that takes in a list and element and checks whether all items in the list are equal to the given element. Your code should satisfy the following assertion:\n```python\nassert check_element([\"green\", \"orange\", \"black\", \"white\"],'blue')==False\n```",
    "Mbpp/285": "Write a function that checks whether a string contains the 'a' character followed by two or three 'b' characters. Your code should satisfy the following assertion:\n```python\nassert text_match_two_three(\"ac\")==(False)\n```",
    "Mbpp/286": "Write a function to find the largest sum of a contiguous array in the modified array which is formed by repeating the given array k times. Your code should satisfy the following assertion:\n```python\nassert max_sub_array_sum_repeated([10, 20, -30, -1], 4, 3) == 30\n```",
    "Mbpp/287": "Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers. Your code should satisfy the following assertion:\n```python\nassert square_Sum(2) == 20\n```",
    "Mbpp/290": "Write a function to find the list of maximum length in a list of lists. Your code should satisfy the following assertion:\n```python\nassert max_length([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]])==(3, [13, 15, 17])\n```",
    "Mbpp/292": "Write a python function to find quotient of two numbers (rounded down to the nearest integer). Your code should satisfy the following assertion:\n```python\nassert find(10,3) == 3\n```",
    "Mbpp/293": "Write a function to find the third side of a right angled triangle. Your code should satisfy the following assertion:\n```python\nassert otherside_rightangle(7,8)==10.63014581273465\n```",
    "Mbpp/294": "Write a function to find the maximum value in a given heterogeneous list. Your code should satisfy the following assertion:\n```python\nassert max_val(['Python', 3, 2, 4, 5, 'version'])==5\n```",
    "Mbpp/295": "Write a function to return the sum of all divisors of a number. Your code should satisfy the following assertion:\n```python\nassert sum_div(8)==7\n```",
    "Mbpp/296": "Write a python function to count inversions in an array. Your code should satisfy the following assertion:\n```python\nassert get_Inv_Count([1,20,6,4,5]) == 5\n```",
    "Mbpp/297": "Write a function to flatten a given nested list structure. Your code should satisfy the following assertion:\n```python\nassert flatten_list([0, 10, [20, 30], 40, 50, [60, 70, 80], [90, 100, 110, 120]])==[0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110, 120]\n```",
    "Mbpp/299": "Write a function to calculate the maximum aggregate from the list of tuples. Your code should satisfy the following assertion:\n```python\nassert max_aggregate([('Juan Whelan',90),('Sabah Colley',88),('Peter Nichols',7),('Juan Whelan',122),('Sabah Colley',84)])==('Juan Whelan', 212)\n```",
    "Mbpp/300": "Write a function to find the count of all binary sequences of length 2n such that sum of first n bits is same as sum of last n bits. Your code should satisfy the following assertion:\n```python\nassert math.isclose(count_binary_seq(1), 2.0, rel_tol=0.001)\n```",
    "Mbpp/301": "Write a function to find the depth of a dictionary. Your code should satisfy the following assertion:\n```python\nassert dict_depth({'a':1, 'b': {'c': {'d': {}}}})==4\n```",
    "Mbpp/305": "Write a function to return two words from a list of words starting with letter 'p'. Your code should satisfy the following assertion:\n```python\nassert start_withp([\"Python PHP\", \"Java JavaScript\", \"c c++\"])==('Python', 'PHP')\n```",
    "Mbpp/306": "Write a function to find the maximum sum of increasing subsequence from prefix until ith index and also including a given kth element which is after i, i.e., k > i . Your code should satisfy the following assertion:\n```python\nassert max_sum_increasing_subseq([1, 101, 2, 3, 100, 4, 5 ], 7, 4, 6) == 11\n```",
    "Mbpp/308": "Write a function to find the specified number of largest products from two given lists, selecting one factor from each list. Your code should satisfy the following assertion:\n```python\nassert large_product([1, 2, 3, 4, 5, 6],[3, 6, 8, 9, 10, 6],3)==[60, 54, 50]\n```",
    "Mbpp/309": "Write a python function to find the maximum of two numbers. Your code should satisfy the following assertion:\n```python\nassert maximum(5,10) == 10\n```",
    "Mbpp/310": "Write a function to convert a given string to a tuple of characters. Your code should satisfy the following assertion:\n```python\nassert string_to_tuple(\"python 3.0\")==('p', 'y', 't', 'h', 'o', 'n', '3', '.', '0')\n```",
    "Mbpp/311": "Write a python function to set the left most unset bit. Your code should satisfy the following assertion:\n```python\nassert set_left_most_unset_bit(10) == 14\n```",
    "Mbpp/312": "Write a function to find the volume of a cone. Your code should satisfy the following assertion:\n```python\nassert math.isclose(volume_cone(5,12), 314.15926535897927, rel_tol=0.001)\n```",
    "Mbpp/388": "Write a python function to find the highest power of 2 that is less than or equal to n. Your code should satisfy the following assertion:\n```python\nassert highest_Power_of_2(10) == 8\n```",
    "Mbpp/389": "Write a function to find the n'th lucas number. Your code should satisfy the following assertion:\n```python\nassert find_lucas(9) == 76\n```",
    "Mbpp/390": "Write a function to apply a given format string to all of the elements in a list. Your code should satisfy the following assertion:\n```python\nassert add_string([1,2,3,4],'temp{0}')==['temp1', 'temp2', 'temp3', 'temp4']\n```",
    "Mbpp/391": "Write a function to convert more than one list to nested dictionary. Your code should satisfy the following assertion:\n```python\nassert convert_list_dictionary([\"S001\", \"S002\", \"S003\", \"S004\"],[\"Adina Park\", \"Leyton Marsh\", \"Duncan Boyle\", \"Saim Richards\"] ,[85, 98, 89, 92])==[{'S001': {'Adina Park': 85}}, {'S002': {'Leyton Marsh': 98}}, {'S003': {'Duncan Boyle': 89}}, {'S004': {'Saim Richards': 92}}]\n```",
    "Mbpp/392": "Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n). Your code should satisfy the following assertion:\n```python\nassert get_max_sum(60) == 106\n```",
    "Mbpp/394": "Write a function to check if given tuple contains no duplicates. Your code should satisfy the following assertion:\n```python\nassert check_distinct((1, 4, 5, 6, 1, 4)) == False\n```",
    "Mbpp/395": "Write a python function to find the first non-repeated character in a given string. Your code should satisfy the following assertion:\n```python\nassert first_non_repeating_character(\"abcabc\") == None\n```",
    "Mbpp/396": "Write a function to check whether the given string starts and ends with the same character or not. Your code should satisfy the following assertion:\n```python\nassert check_char(\"abba\") == \"Valid\"\n```",
    "Mbpp/397": "Write a function to find the median of three numbers. Your code should satisfy the following assertion:\n```python\nassert median_numbers(25,55,65)==55.0\n```",
    "Mbpp/398": "Write a function to compute the sum of digits of each number of a given list. Your code should satisfy the following assertion:\n```python\nassert sum_of_digits([10,2,56])==14\n```",
    "Mbpp/400": "Write a function to extract the number of unique tuples in the given list. Your code should satisfy the following assertion:\n```python\nassert extract_freq([(3, 4), (1, 2), (4, 3), (5, 6)] ) == 3\n```",
    "Mbpp/404": "Write a python function to find the minimum of two numbers. Your code should satisfy the following assertion:\n```python\nassert minimum(1,2) == 1\n```",
    "Mbpp/405": "Write a function to check whether an element exists within a tuple. Your code should satisfy the following assertion:\n```python\nassert check_tuplex((\"w\", 3, \"r\", \"e\", \"s\", \"o\", \"u\", \"r\", \"c\", \"e\"),'r')==True\n```",
    "Mbpp/406": "Write a python function to find whether the parity of a given number is odd. Your code should satisfy the following assertion:\n```python\nassert find_Parity(12) == False\n```",
    "Mbpp/407": "Write a function to create the next bigger number by rearranging the digits of a given number. Your code should satisfy the following assertion:\n```python\nassert rearrange_bigger(12)==21\n```",
    "Mbpp/409": "Write a function to find the minimum product from the pairs of tuples within a given list. Your code should satisfy the following assertion:\n```python\nassert min_product_tuple([(2, 7), (2, 6), (1, 8), (4, 9)] )==8\n```",
    "Mbpp/410": "Write a function to find the minimum value in a given heterogeneous list. Your code should satisfy the following assertion:\n```python\nassert min_val(['Python', 3, 2, 4, 5, 'version'])==2\n```",
    "Mbpp/412": "Write a python function to remove odd numbers from a given list. Your code should satisfy the following assertion:\n```python\nassert remove_odd([1,2,3]) == [2]\n```",
    "Mbpp/413": "Write a function to extract the nth element from a given list of tuples. Your code should satisfy the following assertion:\n```python\nassert extract_nth_element([('Greyson Fulton', 98, 99), ('Brady Kent', 97, 96), ('Wyatt Knott', 91, 94), ('Beau Turnbull', 94, 98)] ,0)==['Greyson Fulton', 'Brady Kent', 'Wyatt Knott', 'Beau Turnbull']\n```",
    "Mbpp/414": "Write a python function to check whether any value in a sequence exists in a sequence or not. Your code should satisfy the following assertion:\n```python\nassert overlapping([1,2,3,4,5],[6,7,8,9]) == False\n```",
    "Mbpp/415": "Write a python function to find a pair with highest product from a given array of integers. Your code should satisfy the following assertion:\n```python\nassert max_Product([1,2,3,4,7,0,8,4]) == (7,8)\n```",
    "Mbpp/418": "Write a python function to find the element of a list having maximum length. Your code should satisfy the following assertion:\n```python\nassert Find_Max([['A'],['A','B'],['A','B','C']]) == ['A','B','C']\n```",
    "Mbpp/419": "Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. Your code should satisfy the following assertion:\n```python\nassert round_and_sum([22.4, 4.0, -16.22, -9.10, 11.00, -12.22, 14.20, -5.20, 17.50])==243\n```",
    "Mbpp/420": "Write a python function to find the cube sum of first n even natural numbers. Your code should satisfy the following assertion:\n```python\nassert cube_Sum(2) == 72\n```",
    "Mbpp/421": "Write a function to concatenate each element of tuple by the delimiter. Your code should satisfy the following assertion:\n```python\nassert concatenate_tuple((\"ID\", \"is\", 4, \"UTS\") ) == 'ID-is-4-UTS'\n```",
    "Mbpp/422": "Write a python function to find the average of cubes of first n natural numbers. Your code should satisfy the following assertion:\n```python\nassert find_Average_Of_Cube(2) == 4.5\n```",
    "Mbpp/424": "Write a function to extract only the rear index element of each string in the given tuple. Your code should satisfy the following assertion:\n```python\nassert extract_rear(('Mers', 'for', 'Vers') ) == ['s', 'r', 's']\n```",
    "Mbpp/425": "Write a function to count the number of sublists containing a particular element. Your code should satisfy the following assertion:\n```python\nassert count_element_in_list([[1, 3], [5, 7], [1, 11], [1, 15, 7]],1)==3\n```",
    "Mbpp/426": "Write a function to filter odd numbers. Your code should satisfy the following assertion:\n```python\nassert filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])==[1,3,5,7,9]\n```",
    "Mbpp/427": "Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format. Your code should satisfy the following assertion:\n```python\nassert change_date_format(\"2026-01-02\") == '02-01-2026'\n```",
    "Mbpp/428": "Write a function to sort the given array by using shell sort. Your code should satisfy the following assertion:\n```python\nassert shell_sort([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]) == [2, 3, 4, 5, 12, 12, 23, 56, 81, 95]\n```",
    "Mbpp/429": "Write a function to extract the elementwise and tuples from the given two tuples. Your code should satisfy the following assertion:\n```python\nassert and_tuples((10, 4, 6, 9), (5, 2, 3, 3)) == (0, 0, 2, 1)\n```",
    "Mbpp/430": "Write a function to find the directrix of a parabola. Your code should satisfy the following assertion:\n```python\nassert parabola_directrix(5,3,2)==-198\n```",
    "Mbpp/431": "Write a function that takes two lists and returns true if they have at least one common element. Your code should satisfy the following assertion:\n```python\nassert common_element([1,2,3,4,5], [5,6,7,8,9])==True\n```",
    "Mbpp/432": "Write a function to find the median length of a trapezium. Your code should satisfy the following assertion:\n```python\nassert median_trapezium(15,25,35)==20\n```",
    "Mbpp/433": "Write a function to check whether the entered number is greater than the elements of the given array. Your code should satisfy the following assertion:\n```python\nassert check_greater([1, 2, 3, 4, 5], 4) == False\n```",
    "Mbpp/435": "Write a python function to find the last digit of a given number. Your code should satisfy the following assertion:\n```python\nassert last_Digit(123) == 3\n```",
    "Mbpp/436": "Write a python function to return the negative numbers in a list. Your code should satisfy the following assertion:\n```python\nassert neg_nos([-1,4,5,-6]) == [-1,-6]\n```",
    "Mbpp/437": "Write a function to remove odd characters in a string. Your code should satisfy the following assertion:\n```python\nassert remove_odd(\"python\")==(\"yhn\")\n```",
    "Mbpp/438": "Write a function to count bidirectional tuple pairs. Your code should satisfy the following assertion:\n```python\nassert count_bidirectional([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)] ) == 3\n```",
    "Mbpp/439": "Write a function to join a list of multiple integers into a single integer. Your code should satisfy the following assertion:\n```python\nassert multiple_to_single([11, 33, 50])==113350\n```",
    "Mbpp/440": "Write a function to find the first adverb and their positions in a given sentence. Your code should satisfy the following assertion:\n```python\nassert find_adverb_position(\"clearly!! we can see the sky\")==(0, 7, 'clearly')\n```",
    "Mbpp/441": "Write a function to find the surface area of a cube of a given size. Your code should satisfy the following assertion:\n```python\nassert surfacearea_cube(5)==150\n```",
    "Mbpp/442": "Write a function to find the ration of positive numbers in an array of integers. Your code should satisfy the following assertion:\n```python\nassert positive_count([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8])==0.54\n```",
    "Mbpp/445": "Write a function to perform index wise multiplication of tuple elements in the given two tuples. Your code should satisfy the following assertion:\n```python\nassert index_multiplication(((1, 3), (4, 5), (2, 9), (1, 10)),((6, 7), (3, 9), (1, 1), (7, 3)) ) == ((6, 21), (12, 45), (2, 9), (7, 30))\n```",
    "Mbpp/446": "Write a python function to count the occurence of all elements of list in a tuple. Your code should satisfy the following assertion:\n```python\nassert count_Occurrence(('a', 'a', 'c', 'b', 'd'),['a', 'b'] ) == 3\n```",
    "Mbpp/447": "Write a function to find cubes of individual elements in a list. Your code should satisfy the following assertion:\n```python\nassert cube_nums([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])==[1, 8, 27, 64, 125, 216, 343, 512, 729, 1000]\n```",
    "Mbpp/448": "Write a function to calculate the sum of perrin numbers. Your code should satisfy the following assertion:\n```python\nassert cal_sum(9) == 49\n```",
    "Mbpp/450": "Write a function to extract specified size of strings from a given list of string values. Your code should satisfy the following assertion:\n```python\nassert extract_string(['Python', 'list', 'exercises', 'practice', 'solution'] ,8)==['practice', 'solution']\n```",
    "Mbpp/451": "Write a function to remove all whitespaces from the given string. Your code should satisfy the following assertion:\n```python\nassert remove_whitespaces(' Google    Flutter ') == 'GoogleFlutter'\n```",
    "Mbpp/453": "Write a python function to find the sum of even factors of a number. Your code should satisfy the following assertion:\n```python\nassert sumofFactors(18) == 26\n```",
    "Mbpp/454": "Write a function that matches a word containing 'z'. Your code should satisfy the following assertion:\n```python\nassert text_match_wordz(\"pythonz.\")==True\n```",
    "Mbpp/455": "Write a function to check whether the given month number contains 31 days or not. Your code should satisfy the following assertion:\n```python\nassert check_monthnumb_number(5)==True\n```",
    "Mbpp/456": "Write a function to reverse each string in a given list of string values. Your code should satisfy the following assertion:\n```python\nassert reverse_string_list(['Red', 'Green', 'Blue', 'White', 'Black'])==['deR', 'neerG', 'eulB', 'etihW', 'kcalB']\n```",
    "Mbpp/457": "Write a python function to find the sublist having minimum length. Your code should satisfy the following assertion:\n```python\nassert Find_Min([[1],[1,2],[1,2,3]]) == [1]\n```",
    "Mbpp/458": "Write a function to find the area of a rectangle. Your code should satisfy the following assertion:\n```python\nassert rectangle_area(10,20)==200\n```",
    "Mbpp/459": "Write a function to remove uppercase substrings from a given string. Your code should satisfy the following assertion:\n```python\nassert remove_uppercase('cAstyoUrFavoRitETVshoWs') == 'cstyoravoitshos'\n```",
    "Mbpp/460": "Write a python function to get the first element of each sublist. Your code should satisfy the following assertion:\n```python\nassert Extract([[1, 2], [3, 4, 5], [6, 7, 8, 9]]) == [1, 3, 6]\n```",
    "Mbpp/461": "Write a python function to count the upper case characters in a given string. Your code should satisfy the following assertion:\n```python\nassert upper_ctr('PYthon') == 1\n```",
    "Mbpp/462": "Write a function to find all possible combinations of the elements of a given list. Your code should satisfy the following assertion:\n```python\nassert combinations_list(['orange', 'red', 'green', 'blue'])==[[], ['orange'], ['red'], ['red', 'orange'], ['green'], ['green', 'orange'], ['green', 'red'], ['green', 'red', 'orange'], ['blue'], ['blue', 'orange'], ['blue', 'red'], ['blue', 'red', 'orange'], ['blue', 'green'], ['blue', 'green', 'orange'], ['blue', 'green', 'red'], ['blue', 'green', 'red', 'orange']]\n```",
    "Mbpp/463": "Write a function to find the maximum product subarray of the given array. Your code should satisfy the following assertion:\n```python\nassert max_subarray_product([1, -2, -3, 0, 7, -8, -2]) == 112\n```",
    "Mbpp/465": "Write a function to drop empty items from a given dictionary. Your code should satisfy the following assertion:\n```python\nassert drop_empty({'c1': 'Red', 'c2': 'Green', 'c3':None})=={'c1': 'Red', 'c2': 'Green'}\n```",
    "Mbpp/468": "Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array. Your code should satisfy the following assertion:\n```python\nassert max_product([3, 100, 4, 5, 150, 6]) == 3000\n```",
    "Mbpp/470": "Write a function to find the pairwise addition of the neighboring elements of the given tuple. Your code should satisfy the following assertion:\n```python\nassert add_pairwise((1, 5, 7, 8, 10)) == (6, 12, 15, 18)\n```",
    "Mbpp/471": "Write a python function to find the product of the array multiplication modulo n. Your code should satisfy the following assertion:\n```python\nassert find_remainder([ 100, 10, 5, 25, 35, 14 ],11) ==9\n```",
    "Mbpp/472": "Write a python function to check whether the given list contains consecutive numbers or not. Your code should satisfy the following assertion:\n```python\nassert check_Consecutive([1,2,3,4,5]) == True\n```",
    "Mbpp/473": "Write a function to find the tuple intersection of elements in the given tuple list irrespective of their order. Your code should satisfy the following assertion:\n```python\nassert tuple_intersection([(3, 4), (5, 6), (9, 10), (4, 5)] , [(5, 4), (3, 4), (6, 5), (9, 11)]) == {(4, 5), (3, 4), (5, 6)}\n```",
    "Mbpp/474": "Write a function to replace characters in a string. Your code should satisfy the following assertion:\n```python\nassert replace_char(\"polygon\",'y','l')==(\"pollgon\")\n```",
    "Mbpp/475": "Write a function to sort a dictionary by value. Your code should satisfy the following assertion:\n```python\nassert sort_counter({'Math':81, 'Physics':83, 'Chemistry':87})==[('Chemistry', 87), ('Physics', 83), ('Math', 81)]\n```",
    "Mbpp/476": "Write a python function to find the sum of the largest and smallest value in a given array. Your code should satisfy the following assertion:\n```python\nassert big_sum([1,2,3]) == 4\n```",
    "Mbpp/477": "Write a python function to convert the given string to lower case. Your code should satisfy the following assertion:\n```python\nassert is_lower(\"InValid\") == \"invalid\"\n```",
    "Mbpp/478": "Write a function to remove lowercase substrings from a given string. Your code should satisfy the following assertion:\n```python\nassert remove_lowercase(\"PYTHon\")==('PYTH')\n```",
    "Mbpp/479": "Write a python function to find the first digit of a given number. Your code should satisfy the following assertion:\n```python\nassert first_Digit(123) == 1\n```",
    "Mbpp/554": "Write a python function which takes a list of integers and only returns the odd ones. Your code should satisfy the following assertion:\n```python\nassert Split([1,2,3,4,5,6]) == [1,3,5]\n```",
    "Mbpp/555": "Write a python function to find the difference between the sum of cubes of the first n natural numbers and the sum of the first n natural numbers. Your code should satisfy the following assertion:\n```python\nassert difference(3) == 30\n```",
    "Mbpp/556": "Write a python function to count the number of pairs whose xor value is odd. Your code should satisfy the following assertion:\n```python\nassert find_Odd_Pair([5,4,7,2,1],5) == 6\n```",
    "Mbpp/557": "Write a function to toggle the case of all characters in a string. Your code should satisfy the following assertion:\n```python\nassert toggle_string(\"Python\")==(\"pYTHON\")\n```",
    "Mbpp/558": "Write a python function to find the sum of the per-digit difference between two integers. Your code should satisfy the following assertion:\n```python\nassert digit_distance_nums(1,2) == 1\n```",
    "Mbpp/559": "Write a function to find the sum of the largest contiguous sublist in the given list. Your code should satisfy the following assertion:\n```python\nassert max_sub_array_sum([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7\n```",
    "Mbpp/560": "Write a function to find the union of the elements of two given tuples and output them in sorted order. Your code should satisfy the following assertion:\n```python\nassert union_elements((3, 4, 5, 6),(5, 7, 4, 10) ) == (3, 4, 5, 6, 7, 10)\n```",
    "Mbpp/562": "Write a python function to find the length of the longest sublists. Your code should satisfy the following assertion:\n```python\nassert Find_Max_Length([[1],[1,4],[5,6,7,8]]) == 4\n```",
    "Mbpp/563": "Write a function to extract values between quotation marks from a string. Your code should satisfy the following assertion:\n```python\nassert extract_values('\"Python\", \"PHP\", \"Java\"')==['Python', 'PHP', 'Java']\n```",
    "Mbpp/564": "Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal. Your code should satisfy the following assertion:\n```python\nassert count_Pairs([1,2,1],3) == 2\n```",
    "Mbpp/565": "Write a python function to split a string into characters. Your code should satisfy the following assertion:\n```python\nassert split('python') == ['p','y','t','h','o','n']\n```",
    "Mbpp/566": "Write a function to get the sum of the digits of a non-negative integer. Your code should satisfy the following assertion:\n```python\nassert sum_digits(345)==12\n```",
    "Mbpp/567": "Write a function to check whether a specified list is sorted or not. Your code should satisfy the following assertion:\n```python\nassert issort_list([1,2,4,6,8,10,12,14,16,17])==True\n```",
    "Mbpp/568": "Write a function to create a list of N empty dictionaries. Your code should satisfy the following assertion:\n```python\nassert empty_list(5)==[{},{},{},{},{}]\n```",
    "Mbpp/569": "Write a function to sort each sublist of strings in a given list of lists. Your code should satisfy the following assertion:\n```python\nassert sort_sublists([['green', 'orange'], ['black', 'white'], ['white', 'black', 'orange']])==[['green', 'orange'], ['black', 'white'], ['black', 'orange', 'white']]\n```",
    "Mbpp/572": "Write a python function to remove duplicate numbers from a given number of lists. Your code should satisfy the following assertion:\n```python\nassert two_unique_nums([1,2,3,2,3,4,5]) == [1, 4, 5]\n```",
    "Mbpp/573": "Write a python function to calculate the product of the unique numbers in a given list. Your code should satisfy the following assertion:\n```python\nassert unique_product([10, 20, 30, 40, 20, 50, 60, 40]) ==  720000000\n```",
    "Mbpp/574": "Write a function to find the surface area of a cylinder. Your code should satisfy the following assertion:\n```python\nassert surfacearea_cylinder(10,5)==942.45\n```",
    "Mbpp/576": "Write a python function to check whether a list is sublist of another or not. Your code should satisfy the following assertion:\n```python\nassert is_Sub_Array([1,4,3,5],[1,2]) == False\n```",
    "Mbpp/577": "Write a python function to find the last digit in factorial of a given number. Your code should satisfy the following assertion:\n```python\nassert last_Digit_Factorial(4) == 4\n```",
    "Mbpp/578": "Write a function to interleave 3 lists of the same length into a single flat list. Your code should satisfy the following assertion:\n```python\nassert interleave_lists([1,2,3,4,5,6,7],[10,20,30,40,50,60,70],[100,200,300,400,500,600,700])==[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]\n```",
    "Mbpp/579": "Write a function to find the dissimilar elements in the given two tuples. Your code should satisfy the following assertion:\n```python\nassert find_dissimilar((3, 4, 5, 6), (5, 7, 4, 10)) == (3, 6, 7, 10)\n```",
    "Mbpp/580": "Write a function to remove uneven elements in the nested mixed tuple. Your code should satisfy the following assertion:\n```python\nassert extract_even((4, 5, (7, 6, (2, 4)), 6, 8)) == (4, (6, (2, 4)), 6, 8)\n```",
    "Mbpp/581": "Write a python function to find the surface area of a square pyramid with a given base edge and height. Your code should satisfy the following assertion:\n```python\nassert surface_Area(3,4) == 33\n```",
    "Mbpp/582": "Write a function to check if a dictionary is empty. Your code should satisfy the following assertion:\n```python\nassert my_dict({10})==False\n```",
    "Mbpp/583": "Write a function which returns nth catalan number. Your code should satisfy the following assertion:\n```python\nassert catalan_number(10)==16796\n```",
    "Mbpp/585": "Write a function to find the n most expensive items in a given dataset. Your code should satisfy the following assertion:\n```python\nassert expensive_items([{'name': 'Item-1', 'price': 101.1},{'name': 'Item-2', 'price': 555.22}],1)==[{'name': 'Item-2', 'price': 555.22}]\n```",
    "Mbpp/586": "Write a python function to split a list at the nth eelment and add the first part to the end. Your code should satisfy the following assertion:\n```python\nassert split_Arr([12,10,5,6,52,36],2) == [5,6,52,36,12,10]\n```",
    "Mbpp/587": "Write a function to convert a list to a tuple. Your code should satisfy the following assertion:\n```python\nassert list_tuple([5, 10, 7, 4, 15, 3])==(5, 10, 7, 4, 15, 3)\n```",
    "Mbpp/588": "Write a python function to find the difference between largest and smallest value in a given list. Your code should satisfy the following assertion:\n```python\nassert big_diff([1,2,3,4]) == 3\n```",
    "Mbpp/589": "Write a function to find perfect squares between two given numbers. Your code should satisfy the following assertion:\n```python\nassert perfect_squares(1,30)==[1, 4, 9, 16, 25]\n```",
    "Mbpp/590": "Write a function to convert polar coordinates to rectangular coordinates. Your code should satisfy the following assertion:\n```python\nassert polar_rect(3,4)==((5.0, 0.9272952180016122), (-2+2.4492935982947064e-16j))\n```",
    "Mbpp/591": "Write a python function to interchange the first and last elements in a list. Your code should satisfy the following assertion:\n```python\nassert swap_List([12, 35, 9, 56, 24]) == [24, 35, 9, 56, 12]\n```",
    "Mbpp/592": "Write a python function to find the sum of the product of consecutive binomial co-efficients. Your code should satisfy the following assertion:\n```python\nassert sum_Of_product(3) == 15\n```",
    "Mbpp/593": "Write a function to remove leading zeroes from an ip address. Your code should satisfy the following assertion:\n```python\nassert removezero_ip(\"216.08.094.196\")==('216.8.94.196')\n```",
    "Mbpp/594": "Write a function to find the difference of the first even and first odd number of a given list. Your code should satisfy the following assertion:\n```python\nassert diff_even_odd([1,3,5,7,4,1,6,8])==3\n```",
    "Mbpp/595": "Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another. Your code should satisfy the following assertion:\n```python\nassert min_Swaps(\"1101\",\"1110\") == 1\n```",
    "Mbpp/596": "Write a function to find the size in bytes of the given tuple. Your code should satisfy the following assertion:\n```python\nassert tuple_size((\"A\", 1, \"B\", 2, \"C\", 3) ) == sys.getsizeof((\"A\", 1, \"B\", 2, \"C\", 3))\n```",
    "Mbpp/597": "Write a function to find kth element from the given two sorted arrays. Your code should satisfy the following assertion:\n```python\nassert find_kth([2, 3, 6, 7, 9], [1, 4, 8, 10], 5) == 6\n```",
    "Mbpp/598": "Write a function to check whether the given number is armstrong or not. Your code should satisfy the following assertion:\n```python\nassert armstrong_number(153)==True\n```",
    "Mbpp/599": "Write a function to find sum and average of first n natural numbers. Your code should satisfy the following assertion:\n```python\nassert sum_average(10)==(55, 5.5)\n```",
    "Mbpp/600": "Write a python function to check whether the given number is even or not. Your code should satisfy the following assertion:\n```python\nassert is_Even(1) == False\n```",
    "Mbpp/602": "Write a python function to find the first repeated character in a given string. Your code should satisfy the following assertion:\n```python\nassert first_repeated_char(\"abcabc\") == \"a\"\n```",
    "Mbpp/603": "Write a function to get all lucid numbers smaller than or equal to a given integer. Your code should satisfy the following assertion:\n```python\nassert get_ludic(10) == [1, 2, 3, 5, 7]\n```",
    "Mbpp/604": "Write a function to reverse words seperated by spaces in a given string. Your code should satisfy the following assertion:\n```python\nassert reverse_words(\"python program\")==(\"program python\")\n```",
    "Mbpp/605": "Write a function to check if the given integer is a prime number. Your code should satisfy the following assertion:\n```python\nassert prime_num(13)==True\n```",
    "Mbpp/606": "Write a function to convert degrees to radians. Your code should satisfy the following assertion:\n```python\nassert radian_degree(90)==1.5707963267948966\n```",
    "Mbpp/607": "Write a function to search a string for a regex pattern. The function should return the matching subtring, a start index and an end index. Your code should satisfy the following assertion:\n```python\nassert find_literals('The quick brown fox jumps over the lazy dog.', 'fox') == ('fox', 16, 19)\n```",
    "Mbpp/608": "Write a python function to find nth bell number. Your code should satisfy the following assertion:\n```python\nassert bell_Number(2) == 2\n```",
    "Mbpp/610": "Write a python function which takes a list and returns a list with the same elements, but the k'th element removed. Your code should satisfy the following assertion:\n```python\nassert remove_kth_element([1,1,2,3,4,4,5,1],3)==[1, 1, 3, 4, 4, 5, 1]\n```",
    "Mbpp/611": "Write a function which given a matrix represented as a list of lists returns the max of the n'th column. Your code should satisfy the following assertion:\n```python\nassert max_of_nth([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n```",
    "Mbpp/612": "Write a python function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second. Your code should satisfy the following assertion:\n```python\nassert merge([['x', 'y'], ['a', 'b'], ['m', 'n']]) == [['x', 'a', 'm'], ['y', 'b', 'n']]\n```",
    "Mbpp/614": "Write a function to find the cumulative sum of all the values that are present in the given tuple list. Your code should satisfy the following assertion:\n```python\nassert cummulative_sum([(1, 3), (5, 6, 7), (2, 6)]) == 30\n```",
    "Mbpp/615": "Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. Your code should satisfy the following assertion:\n```python\nassert average_tuple(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4)))==[30.5, 34.25, 27.0, 23.25]\n```",
    "Mbpp/616": "Write a function which takes two tuples of the same length and performs the element wise modulo. Your code should satisfy the following assertion:\n```python\nassert tuple_modulo((10, 4, 5, 6), (5, 6, 7, 5)) == (0, 4, 5, 1)\n```",
    "Mbpp/618": "Write a function to divide two lists element wise. Your code should satisfy the following assertion:\n```python\nassert div_list([4,5,6],[1, 2, 3])==[4.0,2.5,2.0]\n```",
    "Mbpp/619": "Write a function to move all the numbers to the end of the given string. Your code should satisfy the following assertion:\n```python\nassert move_num('I1love143you55three3000thousand') == 'Iloveyouthreethousand1143553000'\n```",
    "Mbpp/620": "Write a function to find the size of the largest subset of a list of numbers so that every pair is divisible. Your code should satisfy the following assertion:\n```python\nassert largest_subset([ 1, 3, 6, 13, 17, 18 ]) == 4\n```",
    "Mbpp/622": "Write a function to find the median of two sorted lists of same size. Your code should satisfy the following assertion:\n```python\nassert get_median([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5) == 16.0\n```",
    "Mbpp/623": "Write a function to compute the n-th power of each number in a list. Your code should satisfy the following assertion:\n```python\nassert nth_nums([1, 2, 3, 4, 5, 6, 7, 8, 9, 10],2)==[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]\n```",
    "Mbpp/624": "Write a python function to convert a given string to uppercase. Your code should satisfy the following assertion:\n```python\nassert is_upper(\"person\") ==\"PERSON\"\n```",
    "Mbpp/626": "Write a python function to find the area of the largest triangle that can be inscribed in a semicircle with a given radius. Your code should satisfy the following assertion:\n```python\nassert triangle_area(-1) == None\n```",
    "Mbpp/628": "Write a function to replace all spaces in the given string with '%20'. Your code should satisfy the following assertion:\n```python\nassert replace_spaces(\"My Name is Dawood\") == 'My%20Name%20is%20Dawood'\n```",
    "Mbpp/629": "Write a python function to find even numbers from a list of numbers. Your code should satisfy the following assertion:\n```python\nassert Split([1,2,3,4,5]) == [2,4]\n```",
    "Mbpp/630": "Write a function to extract all the adjacent coordinates of the given coordinate tuple. Your code should satisfy the following assertion:\n```python\nassert get_coordinates((3, 4)) == [[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]\n```",
    "Mbpp/631": "Write a function to replace whitespaces with an underscore and vice versa in a given string. Your code should satisfy the following assertion:\n```python\nassert replace_spaces('Jumanji The Jungle') == 'Jumanji_The_Jungle'\n```",
    "Mbpp/632": "Write a python function to move all zeroes to the end of the given list. Your code should satisfy the following assertion:\n```python\nassert move_zero([1,0,2,0,3,4]) == [1,2,3,4,0,0]\n```",
    "Mbpp/633": "Write a python function to find the sum of xor of all pairs of numbers in the given list. Your code should satisfy the following assertion:\n```python\nassert pair_xor_Sum([5,9,7,6],4) == 47\n```",
    "Mbpp/635": "Write a function to sort the given list. Your code should satisfy the following assertion:\n```python\nassert heap_sort([1, 3, 5, 7, 9, 2, 4, 6, 8, 0])==[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n```",
    "Mbpp/637": "Write a function to check whether the given amount has no profit and no loss. Your code should satisfy the following assertion:\n```python\nassert noprofit_noloss(1500,1200)==False\n```",
    "Mbpp/638": "Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius. Your code should satisfy the following assertion:\n```python\nassert wind_chill(120,35)==40\n```",
    "Mbpp/639": "Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter. Your code should satisfy the following assertion:\n```python\nassert sample_nam(['sally', 'Dylan', 'rebecca', 'Diana', 'Joanne', 'keith'])==16\n```",
    "Mbpp/640": "Write a function to remove the parenthesis and what is inbetween them from a string. Your code should satisfy the following assertion:\n```python\nassert remove_parenthesis([\"python (chrome)\"])==(\"python\")\n```",
    "Mbpp/641": "Write a function to find the nth nonagonal number. Your code should satisfy the following assertion:\n```python\nassert is_nonagonal(10) == 325\n```",
    "Mbpp/643": "Write a function that checks if a strings contains 'z', except at the start and end of the word. Your code should satisfy the following assertion:\n```python\nassert text_match_wordz_middle(\"pythonzabc.\")==True\n```",
    "Mbpp/644": "Write a python function to reverse an array upto a given position. Your code should satisfy the following assertion:\n```python\nassert reverse_Array_Upto_K([1, 2, 3, 4, 5, 6],4) == [4, 3, 2, 1, 5, 6]\n```",
    "Mbpp/720": "Write a function to add a dictionary to the tuple. The output should be a tuple. Your code should satisfy the following assertion:\n```python\nassert add_dict_to_tuple((4, 5, 6), {\"MSAM\" : 1, \"is\" : 2, \"best\" : 3} ) == (4, 5, 6, {'MSAM': 1, 'is': 2, 'best': 3})\n```",
    "Mbpp/721": "Given a square matrix of size N*N given as a list of lists, where each cell is associated with a specific cost. A path is defined as a specific sequence of cells that starts from the top-left cell move only right or down and ends on bottom right cell. We want to find a path with the maximum average over all existing paths. Average is computed as total cost divided by the number of cells visited in the path. Your code should satisfy the following assertion:\n```python\nassert maxAverageOfPath([[1, 2, 3], [6, 5, 4], [7, 3, 9]]) == 5.2\n```",
    "Mbpp/722": "The input is given as - a dictionary with a student name as a key and a tuple of float (student_height, student_weight) as a value, - minimal height, - minimal weight. Write a function to filter students that have height and weight above the minimum. Your code should satisfy the following assertion:\n```python\nassert filter_data({'Cierra Vega': (6.2, 70), 'Alden Cantrell': (5.9, 65), 'Kierra Gentry': (6.0, 68), 'Pierre Cox': (5.8, 66)},6.0,70)=={'Cierra Vega': (6.2, 70)}\n```",
    "Mbpp/723": "The input is defined as two lists of the same length. Write a function to count indices where the lists have the same values. Your code should satisfy the following assertion:\n```python\nassert count_same_pair([1, 2, 3, 4, 5, 6, 7, 8],[2, 2, 3, 1, 2, 6, 7, 9])==4\n```",
    "Mbpp/724": "Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power. Your code should satisfy the following assertion:\n```python\nassert power_base_sum(2,100)==115\n```",
    "Mbpp/725": "Write a function to extract values between quotation marks \" \" of the given string. Your code should satisfy the following assertion:\n```python\nassert extract_quotation('Cortex \"A53\" Based \"multi\" tasking \"Processor\"') == ['A53', 'multi', 'Processor']\n```",
    "Mbpp/726": "Write a function that takes as input a tuple of numbers (t_1,...,t_{N+1}) and returns a tuple of length N where the i-th element of the tuple is equal to t_i * t_{i+1}. Your code should satisfy the following assertion:\n```python\nassert multiply_elements((1, 5, 7, 8, 10)) == (5, 35, 56, 80)\n```",
    "Mbpp/728": "Write a function takes as input two lists [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n]. Your code should satisfy the following assertion:\n```python\nassert sum_list([10,20,30],[15,25,35])==[25,45,65]\n```",
    "Mbpp/730": "Write a function to remove consecutive duplicates of a given list. Your code should satisfy the following assertion:\n```python\nassert consecutive_duplicates([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4 ])==[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n```",
    "Mbpp/731": "Write a function to find the lateral surface area of a cone given radius r and the height h. Your code should satisfy the following assertion:\n```python\nassert lateralsurface_cone(5,12)==204.20352248333654\n```",
    "Mbpp/732": "Write a function to replace all occurrences of spaces, commas, or dots with a colon. Your code should satisfy the following assertion:\n```python\nassert replace_specialchar('Python language, Programming language.')==('Python:language::Programming:language:')\n```",
    "Mbpp/733": "Write a function to find the index of the first occurrence of a given number in a sorted array. Your code should satisfy the following assertion:\n```python\nassert find_first_occurrence([2, 5, 5, 5, 6, 6, 8, 9, 9, 9], 5) == 1\n```",
    "Mbpp/734": "Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/. Your code should satisfy the following assertion:\n```python\nassert sum_Of_Subarray_Prod([1,2,3]) == 20\n```",
    "Mbpp/735": "Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/. Your code should satisfy the following assertion:\n```python\nassert toggle_middle_bits(9) == 15\n```",
    "Mbpp/736": "Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php. Your code should satisfy the following assertion:\n```python\nassert left_insertion([1,2,4,5],6)==4\n```",
    "Mbpp/737": "Write a function to check whether the given string is starting with a vowel or not using regex. Your code should satisfy the following assertion:\n```python\nassert check_str(\"annie\")\n```",
    "Mbpp/739": "Write a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/. Your code should satisfy the following assertion:\n```python\nassert find_Index(2) == 4\n```",
    "Mbpp/740": "Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/. Your code should satisfy the following assertion:\n```python\nassert tuple_to_dict((1, 5, 7, 10, 13, 5)) == {1: 5, 7: 10, 13: 5}\n```",
    "Mbpp/741": "Write a python function to check whether all the characters are same or not. Your code should satisfy the following assertion:\n```python\nassert all_Characters_Same(\"python\") == False\n```",
    "Mbpp/742": "Write a function to caluclate the area of a tetrahedron. Your code should satisfy the following assertion:\n```python\nassert area_tetrahedron(3)==15.588457268119894\n```",
    "Mbpp/743": "Write a function to rotate a given list by specified number of items to the right direction. https://www.geeksforgeeks.org/python-program-right-rotate-list-n/. Your code should satisfy the following assertion:\n```python\nassert rotate_right([1, 2, 3, 4, 5, 6, 7, 8, 9, 10],3)==[8, 9, 10, 1, 2, 3, 4, 5, 6, 7]\n```",
    "Mbpp/744": "Write a function to check if the given tuple has any none value or not. Your code should satisfy the following assertion:\n```python\nassert check_none((10, 4, 5, 6, None)) == True\n```",
    "Mbpp/745": "Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php. Your code should satisfy the following assertion:\n```python\nassert divisible_by_digits(1,22)==[1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n```",
    "Mbpp/746": "Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees. Your code should satisfy the following assertion:\n```python\nassert sector_area(4,45)==6.283185307179586\n```",
    "Mbpp/748": "Write a function to put spaces between words starting with capital letters in a given string. Your code should satisfy the following assertion:\n```python\nassert capital_words_spaces(\"Python\") == 'Python'\n```",
    "Mbpp/749": "Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/. Your code should satisfy the following assertion:\n```python\nassert sort_numeric_strings( ['4','12','45','7','0','100','200','-12','-500'])==[-500, -12, 0, 4, 7, 12, 45, 100, 200]\n```",
    "Mbpp/750": "Write a function to add the given tuple to the given list. Your code should satisfy the following assertion:\n```python\nassert add_tuple([5, 6, 7], (9, 10)) == [5, 6, 7, 9, 10]\n```",
    "Mbpp/751": "Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/. Your code should satisfy the following assertion:\n```python\nassert check_min_heap([1, 2, 3, 4, 5, 6]) == True\n```",
    "Mbpp/752": "Write a function to find the nth jacobsthal number. https://www.geeksforgeeks.org/jacobsthal-and-jacobsthal-lucas-numbers/ 0, 1, 1, 3, 5, 11, 21, 43, 85, 171, 341, 683, 1365, 2731, ... Your code should satisfy the following assertion:\n```python\nassert jacobsthal_num(5) == 11\n```",
    "Mbpp/753": "Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases. Your code should satisfy the following assertion:\n```python\nassert min_k([('Manjeet', 10), ('Akshat', 4), ('Akash', 2), ('Nikhil', 8)], 2) == [('Akash', 2), ('Akshat', 4)]\n```",
    "Mbpp/754": "We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. Your code should satisfy the following assertion:\n```python\nassert extract_index_list([1, 1, 3, 4, 5, 6, 7],[0, 1, 2, 3, 4, 5, 7],[0, 1, 2, 3, 4, 5, 7])==[1, 7]\n```",
    "Mbpp/755": "Write a function to find the second smallest number in a list. Your code should satisfy the following assertion:\n```python\nassert second_smallest([1, 2, -8, -2, 0, -2])==-2\n```",
    "Mbpp/757": "Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/. Your code should satisfy the following assertion:\n```python\nassert count_reverse_pairs([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"])== 2\n```",
    "Mbpp/758": "Write a function to count lists within a list. The function should return a dictionary where every list is converted to a tuple and the value of such tuple is the number of its occurencies in the original list. Your code should satisfy the following assertion:\n```python\nassert unique_sublists([[1, 3], [5, 7], [1, 3], [13, 15, 17], [5, 7], [9, 11]] )=={(1, 3): 2, (5, 7): 2, (13, 15, 17): 1, (9, 11): 1}\n```",
    "Mbpp/759": "Write a function to check whether a given string is a decimal number with a precision of 2. Your code should satisfy the following assertion:\n```python\nassert is_decimal('123.11')==True\n```",
    "Mbpp/760": "Write a python function to check whether a list of numbers contains only one distinct element or not. Your code should satisfy the following assertion:\n```python\nassert unique_Element([1,1,1]) == True\n```",
    "Mbpp/762": "Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12. Your code should satisfy the following assertion:\n```python\nassert check_monthnumber_number(6)==True\n```",
    "Mbpp/763": "Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/. Your code should satisfy the following assertion:\n```python\nassert find_min_diff((1,5,3,19,18,25),6) == 1\n```",
    "Mbpp/764": "Write a python function to count number of digits in a given string. Your code should satisfy the following assertion:\n```python\nassert number_ctr('program2bedone') == 1\n```",
    "Mbpp/765": "Write a function to find nth polite number. geeksforgeeks.org/n-th-polite-number/. Your code should satisfy the following assertion:\n```python\nassert is_polite(7) == 11\n```",
    "Mbpp/766": "Write a function to return a list of all pairs of consecutive items in a given list. Your code should satisfy the following assertion:\n```python\nassert pair_wise([1,1,2,3,3,4,4,5])==[(1, 1), (1, 2), (2, 3), (3, 3), (3, 4), (4, 4), (4, 5)]\n```",
    "Mbpp/767": "Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,. Your code should satisfy the following assertion:\n```python\nassert get_pairs_count([1,1,1,1],2) == 6\n```",
    "Mbpp/769": "Write a python function to get the difference between two lists. Your code should satisfy the following assertion:\n```python\nassert (Diff([10, 15, 20, 25, 30, 35, 40], [25, 40, 35])) == [10, 20, 30, 15]\n```",
    "Mbpp/770": "Write a python function to find the sum of fourth power of first n odd natural numbers. Your code should satisfy the following assertion:\n```python\nassert odd_num_sum(2) == 82\n```",
    "Mbpp/771": "Write a function to check if the given expression is balanced or not. https://www.geeksforgeeks.org/check-for-balanced-parentheses-in-an-expression/. Your code should satisfy the following assertion:\n```python\nassert check_expression(\"{()}[{}]\") == True\n```",
    "Mbpp/772": "Write a function to remove all the words with k length in the given string. Your code should satisfy the following assertion:\n```python\nassert remove_length('The person is most value tet', 3) == 'person is most value'\n```",
    "Mbpp/773": "Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match. Your code should satisfy the following assertion:\n```python\nassert occurance_substring('python programming, python language','python')==('python', 0, 6)\n```",
    "Mbpp/775": "Write a python function to check whether every odd index contains odd numbers of a given list. Your code should satisfy the following assertion:\n```python\nassert odd_position([2,1,4,3,6,7,6,3]) == True\n```",
    "Mbpp/777": "Write a python function to find the sum of non-repeated elements in a given list. Your code should satisfy the following assertion:\n```python\nassert find_sum([1,2,3,1,1,4,5,6]) == 21\n```",
    "Mbpp/778": "Write a function to pack consecutive duplicates of a given list elements into sublists. Your code should satisfy the following assertion:\n```python\nassert pack_consecutive_duplicates([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4])==[[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n```",
    "Mbpp/780": "Write a function to find the combinations of sums with tuples in the given tuple list. https://www.geeksforgeeks.org/python-combinations-of-sum-with-tuples-in-tuple-list/. Your code should satisfy the following assertion:\n```python\nassert find_combinations([(2, 4), (6, 7), (5, 1), (6, 10)]) == [(8, 11), (7, 5), (8, 14), (11, 8), (12, 17), (11, 11)]\n```",
    "Mbpp/781": "Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php. Your code should satisfy the following assertion:\n```python\nassert count_divisors(10)\n```",
    "Mbpp/782": "Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/. Your code should satisfy the following assertion:\n```python\nassert odd_length_sum([1,2,4]) == 14\n```",
    "Mbpp/783": "Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/. Your code should satisfy the following assertion:\n```python\nassert rgb_to_hsv(255, 255, 255)==(0, 0.0, 100.0)\n```",
    "Mbpp/784": "Write a function to find the product of first even and odd number of a given list. Your code should satisfy the following assertion:\n```python\nassert mul_even_odd([1,3,5,7,4,1,6,8])==4\n```",
    "Mbpp/785": "Write a function to convert tuple string to integer tuple. Your code should satisfy the following assertion:\n```python\nassert tuple_str_int(\"(7, 8, 9)\") == (7, 8, 9)\n```",
    "Mbpp/786": "Write a function to locate the right insertion point for a specified value in sorted order. Your code should satisfy the following assertion:\n```python\nassert right_insertion([1,2,4,5],6)==4\n```",
    "Mbpp/787": "Write a function that matches a string that has an a followed by three 'b'. Your code should satisfy the following assertion:\n```python\nassert not text_match_three(\"ac\")\n```",
    "Mbpp/788": "Write a function to create a new tuple from the given string and list. Your code should satisfy the following assertion:\n```python\nassert new_tuple([\"WEB\", \"is\"], \"best\") == ('WEB', 'is', 'best')\n```",
    "Mbpp/790": "Write a python function to check whether every even index contains even numbers of a given list. Your code should satisfy the following assertion:\n```python\nassert even_position([3,2,1]) == False\n```",
    "Mbpp/791": "Write a function to remove tuples from the given tuple. Your code should satisfy the following assertion:\n```python\nassert remove_nested((1, 5, 7, (4, 6), 10)) == (1, 5, 7, 10)\n```",
    "Mbpp/792": "Write a python function to count the number of lists in a given number of lists. Your code should satisfy the following assertion:\n```python\nassert count_list([[1, 3], [5, 7], [9, 11], [13, 15, 17]]) == 4\n```",
    "Mbpp/793": "Write a python function to find the last position of an element in a sorted array. Your code should satisfy the following assertion:\n```python\nassert last([1,2,3],1) == 0\n```",
    "Mbpp/794": "Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. Your code should satisfy the following assertion:\n```python\nassert text_starta_endb(\"aabbbb\")\n```",
    "Mbpp/796": "Write function to find the sum of all items in the given dictionary. Your code should satisfy the following assertion:\n```python\nassert return_sum({'a': 100, 'b':200, 'c':300}) == 600\n```",
    "Mbpp/797": "Write a python function to find the sum of all odd natural numbers within the range l and r. Your code should satisfy the following assertion:\n```python\nassert sum_in_range(2,5) == 8\n```",
    "Mbpp/798": "Write a python function to find the sum of an array. Your code should satisfy the following assertion:\n```python\nassert _sum([1, 2, 3]) == 6\n```",
    "Mbpp/799": "Write a function to that rotate left bits by d bits a given number. We assume that the number is 32 bit. Your code should satisfy the following assertion:\n```python\nassert left_rotate(16,2) == 64\n```",
    "Mbpp/800": "Write a function to remove all whitespaces from a string. Your code should satisfy the following assertion:\n```python\nassert remove_all_spaces('python  program')==('pythonprogram')\n```",
    "Mbpp/801": "Write a python function to count the number of equal numbers from three given integers. Your code should satisfy the following assertion:\n```python\nassert test_three_equal(1,1,1) == 3\n```",
    "Mbpp/803": "Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/. Your code should satisfy the following assertion:\n```python\nassert not is_perfect_square(10)\n```",
    "Mbpp/804": "Write a function to check whether the product of numbers in a list is even or not. Your code should satisfy the following assertion:\n```python\nassert is_product_even([1,2,3])\n```",
    "Mbpp/805": "Write a function that returns the list in a list of lists whose sum of elements is the highest. Your code should satisfy the following assertion:\n```python\nassert max_sum_list([[1,2,3], [4,5,6], [10,11,12], [7,8,9]])==[10, 11, 12]\n```",
    "Mbpp/806": "Write a function to find maximum run of uppercase characters in the given string. Your code should satisfy the following assertion:\n```python\nassert max_run_uppercase('GeMKSForGERksISBESt') == 5\n```",
    "Mbpp/807": "Write a python function to find the first odd number in a given list of numbers. Your code should satisfy the following assertion:\n```python\nassert first_odd([1,3,5]) == 1\n```",
    "Mbpp/808": "Write a function to check if the given tuples contain the k or not. Your code should satisfy the following assertion:\n```python\nassert check_K((10, 4, 5, 6, 8), 6) == True\n```",
    "Mbpp/809": "Write a function to check if each element of second tuple is smaller than its corresponding element in the first tuple. Your code should satisfy the following assertion:\n```python\nassert check_smaller((1, 2, 3), (2, 3, 4)) == False\n```"
}